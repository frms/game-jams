add an atk visualization


check if char is moving before caring about avoidance

dont collision avoid your target

twitchy hero steering needs to be smoothed



atk range / touching target 

if the target is within atk range then atk
	if you can get close to the target by going straight to it and not bumping into anyone then move till you can touch the target (test with double raycast to the target making sure you only hit the target)
	else stop moving

if you make contact with the target stop moving





Right now the hero to hero movement ends slightly abruptly as soon as the hero is near its target it stops moving. It would be nice if the hero acted more like it does with arrive and slows down to stop.

Other problems that have yet to be tackled
	stopping when the end location is too close to the wall
	making sure you are not overlapping before you stop moving to a target
	figuring out how to make a group stop figiting when they all try and go to the same location and they cant all fit immediately on top of it
	going around someone directly on your path

The objects layer on the MapData be not be necessary anymore. I can choose to treat buildings and units the same!
	If I do keep the objects layer I must make sure that the collider is the same size as the underlying tile representation (or you get a few bugs like heros walking over unwalkable tiles because smooth pathing rays are not hitting a big enough collider or players clicking on a building and instead of going to the building the hero goes a location inside the building because the tile representation is smaller than the collider)


Path smoothing is not ignoring the selection box in its raycasts. This is technically a problem but its basically not noticable so no need to fix until something becomes worse.

Consider making the map builder guarentee at least X possible paths to the bases

Green health bars for your units
Red for enemies
Blue or Yellow for the currently controlled unit

Make sure hero abilities have appropriate visual indication on how to be used. AOE outlines, cursor changes, etc


Found online:

Off the top of my head:
* Potential fields + edge following. As you mention above (go towards goal until you hit an obstacle, then follow the obstacle edge until you get a clear line of sight). It's so simple, and works surprisingly well in many cases! I do like solutions based on potential fields, like this one, a lot. But it can get into weird failure cases, like going around a column without ever getting a clear line of sight to the goal...

* Flood-fill + density. This one is for the case when there's one destination that everyone's going to as a crowd. First, do a flood fill, so you know the base cost from each cell to the destination. Then start moving agents, following standard gradient descent. But as they occupy each cell, they should bump up its cost, and when they leave, bump it back down (and maybe update neighbors as well). This way other agents will notice high-density cells, because they suddenly have higher cost, and avoid them. But this can also lead to local minima (which might be okay).

* Steering that incorporates A*. Make an A* path to the goal, and a "leash" that follows the path at a constant rate, pulling the agent with - but the agent also gets repelled by other agents nearby, and pulled in by the centroid of the group. As long as the leash is elastic, it can lead to pretty nice behavior.